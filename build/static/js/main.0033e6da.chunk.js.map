{"version":3,"sources":["../../../React_Example_Projects/tic-tac-toe/src/Square.js","../../../React_Example_Projects/tic-tac-toe/src/Board.js","../../../React_Example_Projects/tic-tac-toe/src/Game.js","../../../React_Example_Projects/tic-tac-toe/src/index.js"],"names":["Square","react_default","a","createElement","className","onClick","this","props","value","Component","Board","i","_this","Square_Square","squares","renderSquare","Game","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","xIsNext","stepNumber","lines","length","_lines$i","slicedToArray","b","c","slice","calculateWinner","setState","concat","move","status","_this2","current","winner","moves","map","step","desc","key","jumpTo","Board_Board","handleClick","ReactDOM","render","Game_Game","document","getElementById"],"mappings":"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","file":"static/js/main.0033e6da.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Square extends Component {\n  render() {\n    return (\n        <button className=\"square\" onClick={this.props.onClick}>{this.props.value}</button>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Square from './Square'\nexport default class Board extends Component {\n    renderSquare(i) {\n        return (\n            <Square\n                value={this.props.squares[i]}\n                onClick={() => { this.props.onClick(i) }}\n            />\n        )\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Board from './Board'\nexport default class Game extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null)\n            }],\n            xIsNext: true,\n            stepNumber: 0\n        }\n    }\n    calculateWinner(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        }\n        return null;\n    }\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1)\n        const current = history[history.length - 1]\n        const squares = current.squares.slice()\n\n        if (squares[i] || this.calculateWinner(squares)) return\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\"\n        this.setState({\n            history: history.concat([{\n                squares: squares\n            }]),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length\n        })\n    }\n    jumpTo(move) {\n        this.setState({\n            stepNumber: move,\n            xIsNext: (move%2) === 0\n        })\n    }\n    render() {\n        const history = this.state.history\n        const current = history[this.state.stepNumber]\n        const winner = this.calculateWinner(current.squares)\n\n        const moves = history.map((step, move)=> {\n            const desc = move ?\n            'Go to move #' + move :\n            'Go to game start'\n            return (\n                <li key={move}>\n                    <button onClick={()=>this.jumpTo(move)}>{desc}</button>\n                </li>\n            )\n        })\n        let status \n        if (winner) {\n            status = \"Winner: \" + winner \n        } else {\n            status = \"next player is \" + (this.state.xIsNext ? \"X\" : \"O\")\n        }\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board \n                        squares = {current.squares}\n                        onClick={(i)=>this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Game from './Game'\nimport './index.css'\nReactDOM.render(<Game />, document.getElementById('root'))"],"sourceRoot":""}